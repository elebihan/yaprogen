/*
 * This file is part of {{project_name}}
 *
 * {{copyright_notice}}
 *
{{#license_notice}}
 * {{line}}
{{/license_notice}}
 */

#include <glib/gi18n.h>

#include "{{ns_normalized}}-application.h"

#include "config.h"

static int init_resources(void)
{
	GResource *resource;
	gchar *path;
	GError *error = NULL;
	int ret = -1;

	path = g_strconcat(PACKAGE_DATADIR, "/{{project_normalized}}.gresource",
			   NULL);
	resource = g_resource_load(path, &error);
	if (error) {
		g_warning("%s\n", error->message);
		g_clear_error(&error);
	} else {
		g_resources_register(resource);
		ret = 0;
	}
	g_free(path);

	return ret;
}

static void init_i18n(void)
{
	bindtextdomain(GETTEXT_PACKAGE, LOCALEDIR);
	bind_textdomain_codeset(GETTEXT_PACKAGE, "UTF-8");
	textdomain(GETTEXT_PACKAGE);
}

int main(int argc, char *argv[])
{
	init_i18n();

	if (init_resources() < 0) {
		return 1;
	}

	{{ns_name}}Application *application;
	int status;

	application = {{ns_lower}}_application_new();
	status = g_application_run(G_APPLICATION(application), argc, argv);
	g_object_unref(application);

	return status;
}
