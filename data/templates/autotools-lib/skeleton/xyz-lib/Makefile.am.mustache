lib_LTLIBRARIES = {{library_name}}-@{{api_upper}}_API_VERSION@.la

AM_CFLAGS = -Wall -Werror -std=c99 -Wformat-security

AM_CPPFLAGS = \
	-I $(top_srcdir) \
	$({{api_upper}}_CFLAGS)

{{library_lower}}_@{{api_upper}}_API_VERSION@_la_DEPENDENCIES =

{{library_lower}}_@{{api_upper}}_API_VERSION@_la_LDFLAGS = \
	-export-dynamic \
	$({{api_upper}}_LT_LDFLAGS)

{{library_lower}}_@{{api_upper}}_API_VERSION@_la_LIBADD = \
	$({{api_upper}}_LIBS)

{{library_lower}}_h = \
	{{api_name}}.h

{{library_lower}}_@{{api_upper}}_API_VERSION@_la_SOURCES = \
	{{api_name}}.c \
	$({{library_lower}}_@{{api_upper}}_API_VERSION@_built_sources)

CLEANFILES =

EXTRA_DIST =

{{#is_cross_platform}}
if PLATFORM_WIN32

AM_V_WINDRES = $(AM_V_WINDRES_$(V))
AM_V_WINDRES_ = $(AM_V_WINDRES_$(AM_DEFAULT_VERBOSITY))
AM_V_WINDRES_0 = @echo "  WRES  " $@;

{{library_name}}-win32-res.o: {{library_name}}.rc
	$(AM_V_WINDRES)$(WINDRES) $< $@

{{library_lower}}_@{{api_upper}}_API_VERSION@_la_DEPENDENCIES += {{library_name}}-win32-res.o
{{library_lower}}_@{{api_upper}}_API_VERSION@_la_LDFLAGS += -Wl,{{library_name}}-win32-res.o

EXTRA_DIST += {{library_name}}.rc.in

endif
{{/is_cross_platform}}

includedir = @includedir@/{{library_name}}-@{{api_upper}}_API_VERSION@/{{library_name}}
include_HEADERS = $({{library_lower}}_h)

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = \
	{{library_name}}-@{{api_upper}}_API_VERSION@.pc

{{library_name}}-@{{api_upper}}_API_VERSION@.pc: {{library_name}}.pc
	$(QUIET_GEN)cp -f $< $(@F)
